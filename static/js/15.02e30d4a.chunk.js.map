{"version":3,"sources":["../node_modules/three/examples/jsm/loaders/RGBELoader.js","../node_modules/three/examples/jsm/controls/OrbitControls.js"],"names":["RGBELoader","manager","DataTextureLoader","call","this","type","UnsignedByteType","prototype","Object","assign","create","constructor","parse","buffer","rgbe_error","rgbe_error_code","msg","console","error","fgets","lineLimit","consume","p","pos","i","len","s","chunk","String","fromCharCode","apply","Uint16Array","subarray","indexOf","byteLength","length","slice","RGBEByteToRGBFloat","sourceArray","sourceOffset","destArray","destOffset","e","scale","Math","pow","RGBEByteToRGBHalf","DataUtils","toHalfFloat","byteArray","Uint8Array","rgbe_header_info","line","match","gamma_re","exposure_re","format_re","dimensions_re","header","valid","string","comments","programtype","format","gamma","exposure","width","height","charAt","parseFloat","parseInt","RGBE_ReadHeader","w","h","image_rgba_data","data_rgba","offset","count","byteValue","scanline_buffer","ptr","ptr_end","l","off","isEncodedRun","rgbeStart","scanline_width","num_scanlines","set","RGBE_ReadPixels_RLE","data","RGBEFormat","FloatType","numElements","floatArray","Float32Array","j","RGBFormat","HalfFloatType","halfArray","setDataType","value","load","url","onLoad","onProgress","onError","texture","texData","encoding","RGBEEncoding","minFilter","NearestFilter","magFilter","generateMipmaps","flipY","LinearEncoding","LinearFilter","OrbitControls","object","domElement","undefined","warn","document","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","update","state","STATE","NONE","quat","Quaternion","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","ownerDocument","onPointerMove","onPointerUp","onKeyDown","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","x","y","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","subVectors","handleTouchMovePan","handleTouchMoveDolly","pointerType","mouseAction","preventDefault","focus","window","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","addEventListener","onMouseDown","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","onMouseUp","stopPropagation","handleMouseWheel","needsUpdate","keyCode","handleKeyDown","handleTouchStartDollyPan","DOLLY_ROTATE","handleTouchStartDollyRotate","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","EventDispatcher","MapControls"],"mappings":"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","file":"static/js/15.02e30d4a.chunk.js","sourcesContent":["import {\n\tDataTextureLoader,\n\tDataUtils,\n\tFloatType,\n\tHalfFloatType,\n\tLinearEncoding,\n\tLinearFilter,\n\tNearestFilter,\n\tRGBEEncoding,\n\tRGBEFormat,\n\tRGBFormat,\n\tUnsignedByteType\n} from '../../../build/three.module.js';\n\n// https://github.com/mrdoob/three.js/issues/5552\n// http://en.wikipedia.org/wiki/RGBE_image_format\n\nvar RGBELoader = function ( manager ) {\n\n\tDataTextureLoader.call( this, manager );\n\n\tthis.type = UnsignedByteType;\n\n};\n\nRGBELoader.prototype = Object.assign( Object.create( DataTextureLoader.prototype ), {\n\n\tconstructor: RGBELoader,\n\n\t// adapted from http://www.graphics.cornell.edu/~bjw/rgbe.html\n\n\tparse: function ( buffer ) {\n\n\t\tvar\n\t\t\t/* return codes for rgbe routines */\n\t\t\t//RGBE_RETURN_SUCCESS = 0,\n\t\t\tRGBE_RETURN_FAILURE = - 1,\n\n\t\t\t/* default error routine.  change this to change error handling */\n\t\t\trgbe_read_error = 1,\n\t\t\trgbe_write_error = 2,\n\t\t\trgbe_format_error = 3,\n\t\t\trgbe_memory_error = 4,\n\t\t\trgbe_error = function ( rgbe_error_code, msg ) {\n\n\t\t\t\tswitch ( rgbe_error_code ) {\n\n\t\t\t\t\tcase rgbe_read_error: console.error( 'THREE.RGBELoader Read Error: ' + ( msg || '' ) );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase rgbe_write_error: console.error( 'THREE.RGBELoader Write Error: ' + ( msg || '' ) );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase rgbe_format_error: console.error( 'THREE.RGBELoader Bad File Format: ' + ( msg || '' ) );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\tcase rgbe_memory_error: console.error( 'THREE.RGBELoader: Error: ' + ( msg || '' ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn RGBE_RETURN_FAILURE;\n\n\t\t\t},\n\n\t\t\t/* offsets to red, green, and blue components in a data (float) pixel */\n\t\t\t//RGBE_DATA_RED = 0,\n\t\t\t//RGBE_DATA_GREEN = 1,\n\t\t\t//RGBE_DATA_BLUE = 2,\n\n\t\t\t/* number of floats per pixel, use 4 since stored in rgba image format */\n\t\t\t//RGBE_DATA_SIZE = 4,\n\n\t\t\t/* flags indicating which fields in an rgbe_header_info are valid */\n\t\t\tRGBE_VALID_PROGRAMTYPE = 1,\n\t\t\tRGBE_VALID_FORMAT = 2,\n\t\t\tRGBE_VALID_DIMENSIONS = 4,\n\n\t\t\tNEWLINE = '\\n',\n\n\t\t\tfgets = function ( buffer, lineLimit, consume ) {\n\n\t\t\t\tlineLimit = ! lineLimit ? 1024 : lineLimit;\n\t\t\t\tvar p = buffer.pos,\n\t\t\t\t\ti = - 1, len = 0, s = '', chunkSize = 128,\n\t\t\t\t\tchunk = String.fromCharCode.apply( null, new Uint16Array( buffer.subarray( p, p + chunkSize ) ) )\n\t\t\t\t;\n\t\t\t\twhile ( ( 0 > ( i = chunk.indexOf( NEWLINE ) ) ) && ( len < lineLimit ) && ( p < buffer.byteLength ) ) {\n\n\t\t\t\t\ts += chunk; len += chunk.length;\n\t\t\t\t\tp += chunkSize;\n\t\t\t\t\tchunk += String.fromCharCode.apply( null, new Uint16Array( buffer.subarray( p, p + chunkSize ) ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( - 1 < i ) {\n\n\t\t\t\t\t/*for (i=l-1; i>=0; i--) {\n\t\t\t\t\t\tbyteCode = m.charCodeAt(i);\n\t\t\t\t\t\tif (byteCode > 0x7f && byteCode <= 0x7ff) byteLen++;\n\t\t\t\t\t\telse if (byteCode > 0x7ff && byteCode <= 0xffff) byteLen += 2;\n\t\t\t\t\t\tif (byteCode >= 0xDC00 && byteCode <= 0xDFFF) i--; //trail surrogate\n\t\t\t\t\t}*/\n\t\t\t\t\tif ( false !== consume ) buffer.pos += len + i + 1;\n\t\t\t\t\treturn s + chunk.slice( 0, i );\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t},\n\n\t\t\t/* minimal header reading.  modify if you want to parse more information */\n\t\t\tRGBE_ReadHeader = function ( buffer ) {\n\n\t\t\t\tvar line, match,\n\n\t\t\t\t\t// regexes to parse header info fields\n\t\t\t\t\tmagic_token_re = /^#\\?(\\S+)/,\n\t\t\t\t\tgamma_re = /^\\s*GAMMA\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/,\n\t\t\t\t\texposure_re = /^\\s*EXPOSURE\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/,\n\t\t\t\t\tformat_re = /^\\s*FORMAT=(\\S+)\\s*$/,\n\t\t\t\t\tdimensions_re = /^\\s*\\-Y\\s+(\\d+)\\s+\\+X\\s+(\\d+)\\s*$/,\n\n\t\t\t\t\t// RGBE format header struct\n\t\t\t\t\theader = {\n\n\t\t\t\t\t\tvalid: 0, /* indicate which fields are valid */\n\n\t\t\t\t\t\tstring: '', /* the actual header string */\n\n\t\t\t\t\t\tcomments: '', /* comments found in header */\n\n\t\t\t\t\t\tprogramtype: 'RGBE', /* listed at beginning of file to identify it after \"#?\". defaults to \"RGBE\" */\n\n\t\t\t\t\t\tformat: '', /* RGBE format, default 32-bit_rle_rgbe */\n\n\t\t\t\t\t\tgamma: 1.0, /* image has already been gamma corrected with given gamma. defaults to 1.0 (no correction) */\n\n\t\t\t\t\t\texposure: 1.0, /* a value of 1.0 in an image corresponds to <exposure> watts/steradian/m^2. defaults to 1.0 */\n\n\t\t\t\t\t\twidth: 0, height: 0 /* image dimensions, width/height */\n\n\t\t\t\t\t};\n\n\t\t\t\tif ( buffer.pos >= buffer.byteLength || ! ( line = fgets( buffer ) ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_read_error, 'no header found' );\n\n\t\t\t\t}\n\n\t\t\t\t/* if you want to require the magic token then uncomment the next line */\n\t\t\t\tif ( ! ( match = line.match( magic_token_re ) ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_format_error, 'bad initial token' );\n\n\t\t\t\t}\n\n\t\t\t\theader.valid |= RGBE_VALID_PROGRAMTYPE;\n\t\t\t\theader.programtype = match[ 1 ];\n\t\t\t\theader.string += line + '\\n';\n\n\t\t\t\twhile ( true ) {\n\n\t\t\t\t\tline = fgets( buffer );\n\t\t\t\t\tif ( false === line ) break;\n\t\t\t\t\theader.string += line + '\\n';\n\n\t\t\t\t\tif ( '#' === line.charAt( 0 ) ) {\n\n\t\t\t\t\t\theader.comments += line + '\\n';\n\t\t\t\t\t\tcontinue; // comment line\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( gamma_re ) ) {\n\n\t\t\t\t\t\theader.gamma = parseFloat( match[ 1 ], 10 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( exposure_re ) ) {\n\n\t\t\t\t\t\theader.exposure = parseFloat( match[ 1 ], 10 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( format_re ) ) {\n\n\t\t\t\t\t\theader.valid |= RGBE_VALID_FORMAT;\n\t\t\t\t\t\theader.format = match[ 1 ];//'32-bit_rle_rgbe';\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( dimensions_re ) ) {\n\n\t\t\t\t\t\theader.valid |= RGBE_VALID_DIMENSIONS;\n\t\t\t\t\t\theader.height = parseInt( match[ 1 ], 10 );\n\t\t\t\t\t\theader.width = parseInt( match[ 2 ], 10 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( header.valid & RGBE_VALID_FORMAT ) && ( header.valid & RGBE_VALID_DIMENSIONS ) ) break;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! ( header.valid & RGBE_VALID_FORMAT ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_format_error, 'missing format specifier' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! ( header.valid & RGBE_VALID_DIMENSIONS ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_format_error, 'missing image size specifier' );\n\n\t\t\t\t}\n\n\t\t\t\treturn header;\n\n\t\t\t},\n\n\t\t\tRGBE_ReadPixels_RLE = function ( buffer, w, h ) {\n\n\t\t\t\tvar data_rgba, offset, pos, count, byteValue,\n\t\t\t\t\tscanline_buffer, ptr, ptr_end, i, l, off, isEncodedRun,\n\t\t\t\t\tscanline_width = w, num_scanlines = h, rgbeStart\n\t\t\t\t;\n\n\t\t\t\tif (\n\t\t\t\t\t// run length encoding is not allowed so read flat\n\t\t\t\t\t( ( scanline_width < 8 ) || ( scanline_width > 0x7fff ) ) ||\n\t\t\t\t\t// this file is not run length encoded\n\t\t\t\t\t( ( 2 !== buffer[ 0 ] ) || ( 2 !== buffer[ 1 ] ) || ( buffer[ 2 ] & 0x80 ) )\n\t\t\t\t) {\n\n\t\t\t\t\t// return the flat buffer\n\t\t\t\t\treturn new Uint8Array( buffer );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scanline_width !== ( ( buffer[ 2 ] << 8 ) | buffer[ 3 ] ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_format_error, 'wrong scanline width' );\n\n\t\t\t\t}\n\n\t\t\t\tdata_rgba = new Uint8Array( 4 * w * h );\n\n\t\t\t\tif ( ! data_rgba.length ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_memory_error, 'unable to allocate buffer space' );\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0; pos = 0; ptr_end = 4 * scanline_width;\n\t\t\t\trgbeStart = new Uint8Array( 4 );\n\t\t\t\tscanline_buffer = new Uint8Array( ptr_end );\n\n\t\t\t\t// read in each successive scanline\n\t\t\t\twhile ( ( num_scanlines > 0 ) && ( pos < buffer.byteLength ) ) {\n\n\t\t\t\t\tif ( pos + 4 > buffer.byteLength ) {\n\n\t\t\t\t\t\treturn rgbe_error( rgbe_read_error );\n\n\t\t\t\t\t}\n\n\t\t\t\t\trgbeStart[ 0 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 1 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 2 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 3 ] = buffer[ pos ++ ];\n\n\t\t\t\t\tif ( ( 2 != rgbeStart[ 0 ] ) || ( 2 != rgbeStart[ 1 ] ) || ( ( ( rgbeStart[ 2 ] << 8 ) | rgbeStart[ 3 ] ) != scanline_width ) ) {\n\n\t\t\t\t\t\treturn rgbe_error( rgbe_format_error, 'bad rgbe scanline format' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// read each of the four channels for the scanline into the buffer\n\t\t\t\t\t// first red, then green, then blue, then exponent\n\t\t\t\t\tptr = 0;\n\t\t\t\t\twhile ( ( ptr < ptr_end ) && ( pos < buffer.byteLength ) ) {\n\n\t\t\t\t\t\tcount = buffer[ pos ++ ];\n\t\t\t\t\t\tisEncodedRun = count > 128;\n\t\t\t\t\t\tif ( isEncodedRun ) count -= 128;\n\n\t\t\t\t\t\tif ( ( 0 === count ) || ( ptr + count > ptr_end ) ) {\n\n\t\t\t\t\t\t\treturn rgbe_error( rgbe_format_error, 'bad scanline data' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( isEncodedRun ) {\n\n\t\t\t\t\t\t\t// a (encoded) run of the same value\n\t\t\t\t\t\t\tbyteValue = buffer[ pos ++ ];\n\t\t\t\t\t\t\tfor ( i = 0; i < count; i ++ ) {\n\n\t\t\t\t\t\t\t\tscanline_buffer[ ptr ++ ] = byteValue;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//ptr += count;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// a literal-run\n\t\t\t\t\t\t\tscanline_buffer.set( buffer.subarray( pos, pos + count ), ptr );\n\t\t\t\t\t\t\tptr += count; pos += count;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\t// now convert data from buffer into rgba\n\t\t\t\t\t// first red, then green, then blue, then exponent (alpha)\n\t\t\t\t\tl = scanline_width; //scanline_buffer.byteLength;\n\t\t\t\t\tfor ( i = 0; i < l; i ++ ) {\n\n\t\t\t\t\t\toff = 0;\n\t\t\t\t\t\tdata_rgba[ offset ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 1 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 2 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 3 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toffset += 4;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnum_scanlines --;\n\n\t\t\t\t}\n\n\t\t\t\treturn data_rgba;\n\n\t\t\t};\n\n\t\tvar RGBEByteToRGBFloat = function ( sourceArray, sourceOffset, destArray, destOffset ) {\n\n\t\t\tvar e = sourceArray[ sourceOffset + 3 ];\n\t\t\tvar scale = Math.pow( 2.0, e - 128.0 ) / 255.0;\n\n\t\t\tdestArray[ destOffset + 0 ] = sourceArray[ sourceOffset + 0 ] * scale;\n\t\t\tdestArray[ destOffset + 1 ] = sourceArray[ sourceOffset + 1 ] * scale;\n\t\t\tdestArray[ destOffset + 2 ] = sourceArray[ sourceOffset + 2 ] * scale;\n\n\t\t};\n\n\t\tvar RGBEByteToRGBHalf = function ( sourceArray, sourceOffset, destArray, destOffset ) {\n\n\t\t\tvar e = sourceArray[ sourceOffset + 3 ];\n\t\t\tvar scale = Math.pow( 2.0, e - 128.0 ) / 255.0;\n\n\t\t\tdestArray[ destOffset + 0 ] = DataUtils.toHalfFloat( sourceArray[ sourceOffset + 0 ] * scale );\n\t\t\tdestArray[ destOffset + 1 ] = DataUtils.toHalfFloat( sourceArray[ sourceOffset + 1 ] * scale );\n\t\t\tdestArray[ destOffset + 2 ] = DataUtils.toHalfFloat( sourceArray[ sourceOffset + 2 ] * scale );\n\n\t\t};\n\n\t\tvar byteArray = new Uint8Array( buffer );\n\t\tbyteArray.pos = 0;\n\t\tvar rgbe_header_info = RGBE_ReadHeader( byteArray );\n\n\t\tif ( RGBE_RETURN_FAILURE !== rgbe_header_info ) {\n\n\t\t\tvar w = rgbe_header_info.width,\n\t\t\t\th = rgbe_header_info.height,\n\t\t\t\timage_rgba_data = RGBE_ReadPixels_RLE( byteArray.subarray( byteArray.pos ), w, h );\n\n\t\t\tif ( RGBE_RETURN_FAILURE !== image_rgba_data ) {\n\n\t\t\t\tswitch ( this.type ) {\n\n\t\t\t\t\tcase UnsignedByteType:\n\n\t\t\t\t\t\tvar data = image_rgba_data;\n\t\t\t\t\t\tvar format = RGBEFormat; // handled as THREE.RGBAFormat in shaders\n\t\t\t\t\t\tvar type = UnsignedByteType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase FloatType:\n\n\t\t\t\t\t\tvar numElements = ( image_rgba_data.length / 4 ) * 3;\n\t\t\t\t\t\tvar floatArray = new Float32Array( numElements );\n\n\t\t\t\t\t\tfor ( var j = 0; j < numElements; j ++ ) {\n\n\t\t\t\t\t\t\tRGBEByteToRGBFloat( image_rgba_data, j * 4, floatArray, j * 3 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar data = floatArray;\n\t\t\t\t\t\tvar format = RGBFormat;\n\t\t\t\t\t\tvar type = FloatType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase HalfFloatType:\n\n\t\t\t\t\t\tvar numElements = ( image_rgba_data.length / 4 ) * 3;\n\t\t\t\t\t\tvar halfArray = new Uint16Array( numElements );\n\n\t\t\t\t\t\tfor ( var j = 0; j < numElements; j ++ ) {\n\n\t\t\t\t\t\t\tRGBEByteToRGBHalf( image_rgba_data, j * 4, halfArray, j * 3 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar data = halfArray;\n\t\t\t\t\t\tvar format = RGBFormat;\n\t\t\t\t\t\tvar type = HalfFloatType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.error( 'THREE.RGBELoader: unsupported type: ', this.type );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\twidth: w, height: h,\n\t\t\t\t\tdata: data,\n\t\t\t\t\theader: rgbe_header_info.string,\n\t\t\t\t\tgamma: rgbe_header_info.gamma,\n\t\t\t\t\texposure: rgbe_header_info.exposure,\n\t\t\t\t\tformat: format,\n\t\t\t\t\ttype: type\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\tsetDataType: function ( value ) {\n\n\t\tthis.type = value;\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tfunction onLoadCallback( texture, texData ) {\n\n\t\t\tswitch ( texture.type ) {\n\n\t\t\t\tcase UnsignedByteType:\n\n\t\t\t\t\ttexture.encoding = RGBEEncoding;\n\t\t\t\t\ttexture.minFilter = NearestFilter;\n\t\t\t\t\ttexture.magFilter = NearestFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase FloatType:\n\n\t\t\t\t\ttexture.encoding = LinearEncoding;\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase HalfFloatType:\n\n\t\t\t\t\ttexture.encoding = LinearEncoding;\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}\n\n\t\treturn DataTextureLoader.prototype.load.call( this, url, onLoadCallback, onProgress, onError );\n\n\t}\n\n} );\n\nexport { RGBELoader };\n","import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from '../../../build/three.module.js';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar OrbitControls = function ( object, domElement ) {\n\n\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\tthis.object = object;\n\tthis.domElement = domElement;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.05;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.panSpeed = 1.0;\n\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t// Touch fingers\n\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().invert();\n\n\t\tvar lastPosition = new Vector3();\n\t\tvar lastQuaternion = new Quaternion();\n\n\t\tvar twoPI = 2 * Math.PI;\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t} else {\n\n\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t}\n\n\t\t\t// restrict theta to be between desired limits\n\n\t\t\tvar min = scope.minAzimuthAngle;\n\t\t\tvar max = scope.maxAzimuthAngle;\n\n\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t}\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\n\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove, false );\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp, false );\n\n\t\tscope.domElement.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = {\n\t\tNONE: - 1,\n\t\tROTATE: 0,\n\t\tDOLLY: 1,\n\t\tPAN: 2,\n\t\tTOUCH_ROTATE: 3,\n\t\tTOUCH_PAN: 4,\n\t\tTOUCH_DOLLY_PAN: 5,\n\t\tTOUCH_DOLLY_ROTATE: 6\n\t};\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new Spherical();\n\tvar sphericalDelta = new Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new Vector2();\n\tvar rotateEnd = new Vector2();\n\tvar rotateDelta = new Vector2();\n\n\tvar panStart = new Vector2();\n\tvar panEnd = new Vector2();\n\tvar panDelta = new Vector2();\n\n\tvar dollyStart = new Vector2();\n\tvar dollyEnd = new Vector2();\n\tvar dollyDelta = new Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t}\n\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement;\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( /*event*/ ) {\n\n\t\t// no-op\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\tvar needsUpdate = false;\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.update();\n\n\t\t}\n\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\trotateStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartPan( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartDolly( event ) {\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyStart.set( 0, distance );\n\n\t}\n\n\tfunction handleTouchStartDollyPan( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\tif ( scope.enablePan ) handleTouchStartPan( event );\n\n\t}\n\n\tfunction handleTouchStartDollyRotate( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\trotateEnd.set( x, y );\n\n\t\t}\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t}\n\n\tfunction handleTouchMovePan( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanEnd.set( x, y );\n\n\t\t}\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t}\n\n\tfunction handleTouchMoveDolly( event ) {\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyEnd.set( 0, distance );\n\n\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\tdollyOut( dollyDelta.y );\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t}\n\n\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t}\n\n\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t}\n\n\tfunction handleTouchEnd( /*event*/ ) {\n\n\t\t// no-op\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onPointerDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tonMouseDown( event );\n\t\t\t\tbreak;\n\n\t\t\t// TODO touch\n\n\t\t}\n\n\t}\n\n\tfunction onPointerMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tonMouseMove( event );\n\t\t\t\tbreak;\n\n\t\t\t// TODO touch\n\n\t\t}\n\n\t}\n\n\tfunction onPointerUp( event ) {\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tonMouseUp( event );\n\t\t\t\tbreak;\n\n\t\t\t// TODO touch\n\n\t\t}\n\n\t}\n\n\tfunction onMouseDown( event ) {\n\n\t\t// Prevent the browser from scrolling.\n\t\tevent.preventDefault();\n\n\t\t// Manually set the focus since calling preventDefault above\n\t\t// prevents the browser from setting it automatically.\n\n\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\tvar mouseAction;\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase 0:\n\n\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\n\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\n\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tmouseAction = - 1;\n\n\t\t}\n\n\t\tswitch ( mouseAction ) {\n\n\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase MOUSE.PAN:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointermove', onPointerMove, false );\n\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointerup', onPointerUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove, false );\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp, false );\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tscope.dispatchEvent( startEvent );\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault(); // prevent scrolling\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\n\n\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\n\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleTouchStartDollyRotate( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault(); // prevent scrolling\n\t\tevent.stopPropagation();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'pointerdown', onPointerDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\tscope.domElement.addEventListener( 'keydown', onKeyDown, false );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nOrbitControls.prototype = Object.create( EventDispatcher.prototype );\nOrbitControls.prototype.constructor = OrbitControls;\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nvar MapControls = function ( object, domElement ) {\n\n\tOrbitControls.call( this, object, domElement );\n\n\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\tthis.touches.ONE = TOUCH.PAN;\n\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n};\n\nMapControls.prototype = Object.create( EventDispatcher.prototype );\nMapControls.prototype.constructor = MapControls;\n\nexport { OrbitControls, MapControls };\n"],"sourceRoot":""}